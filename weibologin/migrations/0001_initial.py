# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-04-07 11:22
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('url', models.CharField(max_length=500)),
            ],
            options={
                'db_table': 'author',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=30, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LiveRadioDictionary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, max_length=45, null=True)),
                ('name', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'live_radio_dictionary',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LiveRadioPlayList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('radio_id', models.IntegerField()),
                ('play_date', models.DateTimeField()),
                ('program', models.CharField(max_length=255)),
                ('play_time', models.CharField(max_length=45)),
                ('insert_time', models.DateTimeField()),
            ],
            options={
                'db_table': 'live_radio_play_list',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LiveTelecastRadio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('area', models.CharField(blank=True, max_length=45, null=True)),
                ('type', models.CharField(blank=True, max_length=45, null=True)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('url_playlist', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'live_telecast_radio',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('subject', models.CharField(blank=True, max_length=255, null=True)),
                ('keyword', models.CharField(blank=True, max_length=45, null=True)),
                ('compere', models.CharField(blank=True, max_length=45, null=True)),
                ('guests', models.CharField(blank=True, max_length=255, null=True)),
                ('singer', models.CharField(blank=True, max_length=45, null=True)),
                ('language', models.CharField(blank=True, max_length=45, null=True)),
                ('duration', models.CharField(blank=True, max_length=45, null=True)),
                ('music_genre', models.CharField(blank=True, max_length=45, null=True)),
                ('local_path', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'program',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RadioProgram',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('type', models.IntegerField(blank=True, null=True)),
                ('subject', models.CharField(blank=True, max_length=50, null=True)),
                ('key_words', models.CharField(blank=True, max_length=255, null=True)),
                ('block', models.CharField(blank=True, max_length=255, null=True)),
                ('compere', models.CharField(blank=True, max_length=45, null=True)),
                ('guests', models.CharField(blank=True, max_length=255, null=True)),
                ('file_name', models.CharField(max_length=45)),
                ('server_name', models.CharField(max_length=45)),
                ('share_name', models.CharField(max_length=45)),
                ('directory', models.CharField(max_length=255)),
                ('duration', models.IntegerField(blank=True, null=True)),
                ('published_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'radio_program',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SubjectUserProgram',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shortening', models.CharField(max_length=255)),
                ('code', models.IntegerField()),
                ('describe', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'subject_user_program',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_id', models.IntegerField(blank=True, null=True)),
                ('test_name', models.CharField(blank=True, max_length=55, null=True)),
            ],
            options={
                'db_table': 'test',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
                ('password', models.CharField(max_length=45)),
                ('login_type', models.IntegerField()),
                ('weibo_id', models.CharField(blank=True, max_length=255, null=True)),
                ('sex', models.IntegerField(blank=True, null=True)),
                ('birth_year', models.IntegerField(blank=True, null=True)),
                ('occupation', models.CharField(blank=True, max_length=45, null=True)),
                ('tastes', models.CharField(blank=True, max_length=255, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WeiboUser',
            fields=[
                ('weibo_id', models.IntegerField(primary_key=True, serialize=False)),
                ('access_token', models.CharField(blank=True, max_length=255, null=True)),
                ('statuses_type', models.CharField(blank=True, max_length=1000, null=True)),
                ('tag', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'db_table': 'weibo_user',
                'managed': False,
            },
        ),
    ]
